{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js","./node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-8e692445.js';\nimport { c as componentOnReady, q as debounce } from './helpers-3b390e48.js';\nimport { b as getIonMode } from './ionic-global-c74e4951.js';\nimport { o as openURL, c as createColorClasses } from './theme-7670341c.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n/** Join the non empty segments with \"/\". */\nconst generatePath = (segments) => {\n  const path = segments.filter((s) => s.length > 0).join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\n/**\n * Transforms a chain to a list of segments.\n *\n * Notes:\n * - parameter segments of the form :param are replaced with their value,\n * - null is returned when a value is missing for any parameter segment.\n */\nconst chainToSegments = (chain) => {\n  const segments = [];\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        segments.push(param);\n      }\n      else if (segment !== '') {\n        segments.push(segment);\n      }\n    }\n  }\n  return segments;\n};\n/**\n * Removes the prefix segments from the path segments.\n *\n * Return:\n * - null when the path segments do not start with the passed prefix,\n * - the path segments after the prefix otherwise.\n */\nconst removePrefix = (prefix, segments) => {\n  if (prefix.length > segments.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return segments;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== segments[i]) {\n      return null;\n    }\n  }\n  if (segments.length === prefix.length) {\n    return [''];\n  }\n  return segments.slice(prefix.length);\n};\nconst readSegments = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const segments = parsePath(pathname).segments;\n  return removePrefix(prefix, segments);\n};\n/**\n * Parses the path to:\n * - segments an array of '/' separated parts,\n * - queryString (undefined when no query string).\n */\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substring(qsStart + 1);\n      path = path.substring(0, qsStart);\n    }\n    segments = path\n      .split('/')\n      .map((s) => s.trim())\n      .filter((s) => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const segments = [];\n    chain.forEach((r) => segments.push(...r.segments));\n    const ids = chain.map((r) => r.id);\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\n/**\n * Activates the passed route chain.\n *\n * There must be exactly one outlet per route entry in the chain.\n *\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\n * setRouteId will create or select the view in the outlet.\n */\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\n/**\n * Recursively walks the outlet in the DOM.\n *\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\n */\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // eslint-disable-next-line no-cond-assign\n  while ((outlet = searchNavNode(node))) {\n    const id = await outlet.getRouteId();\n    if (id) {\n      node = id.element;\n      id.element = undefined;\n      ids.push(id);\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\n  });\n};\n/** Selector for all the outlets supported by the router. */\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(OUTLET_SELECTOR)) {\n    return root;\n  }\n  const outlet = root.querySelector(OUTLET_SELECTOR);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n/**\n * Returns whether the given redirect matches the given path segments.\n *\n * A redirect matches when the segments of the path and redirect.from are equal.\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\n */\nconst matchesRedirect = (segments, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > segments.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== segments[i]) {\n      return false;\n    }\n  }\n  return from.length === segments.length;\n};\n/** Returns the first redirect matching the path segments or undefined when no match found. */\nconst findRouteRedirect = (segments, redirects) => {\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      // Only compare routes with the chain that have the same number of parameters.\n      if (routeIdParams.length === routeChain.segments.length) {\n        // Maps the route's params into a path based on the path variable names,\n        // to compare against the route chain format.\n        //\n        // Before:\n        // ```ts\n        // {\n        //  params: {\n        //    s1: 'a',\n        //    s2: 'b'\n        //  }\n        // }\n        // ```\n        //\n        // After:\n        // ```ts\n        // [':s1',':s2']\n        // ```\n        //\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\n/**\n * Matches the segments against the chain.\n *\n * Returns:\n * - null when there is no match,\n * - a chain with the params properties updated with the parameter segments on match.\n */\nconst matchesSegments = (segments, chain) => {\n  const inputSegments = new RouterSegments(segments);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const chainSegments = chain[i].segments;\n    if (chainSegments[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of chainSegments) {\n        const data = inputSegments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      segments: route.segments,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave,\n    }));\n  }\n  return chain;\n};\n/**\n * Merges the route parameter objects.\n * Returns undefined when both parameters are undefined.\n */\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n/**\n * Finds the best match for the ids in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the RouteIDs.\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\n */\nconst findChainForIDs = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => {\n      var _a;\n      return ({\n        id: route.id,\n        segments: route.segments,\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\n      });\n    });\n  }\n  return null;\n};\n/**\n * Finds the best match for the segments in the chains.\n *\n * Returns the best match or null when no match is found.\n * When a chain is returned the parameters are updated from the segments.\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\n */\nconst findChainForSegments = (segments, chains) => {\n  let match = null;\n  let bestScore = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesSegments(segments, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > bestScore) {\n        bestScore = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\n/**\n * Computes the priority of a chain.\n *\n * Parameter segments are given a lower priority over fixed segments.\n *\n * Considering the following 2 chains matching the path /path/to/page:\n * - /path/to/:where\n * - /path/to/page\n *\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\n */\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const segment of route.segments) {\n      if (segment[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (segment !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(segments) {\n    this.segments = segments.slice();\n  }\n  next() {\n    if (this.segments.length > 0) {\n      return this.segments.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\n/**\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\n *\n * The redirects are returned as a list of RouteRedirect.\n */\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map((el) => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\n/**\n * Extracts all the routes (that is <ion-route> elements inside the root).\n *\n * The routes are returned as a list of chains - the flattened tree.\n */\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n/**\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\n *\n * Note: routes without a component are ignored together with their children.\n */\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\n    .map((el) => {\n    const component = readProp(el, 'component');\n    return {\n      segments: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el),\n    };\n  });\n};\n/**\n * Flattens a RouterTree in a list of chains.\n *\n * Each chain represents a path from the root node to a terminal node.\n */\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\n/** Flattens a route node recursively and push each branch to the chains list. */\nconst flattenNode = (chain, chains, node) => {\n  chain = [\n    ...chain,\n    {\n      id: node.id,\n      segments: node.segments,\n      params: node.params,\n      beforeLeave: node.beforeLeave,\n      beforeEnter: node.beforeEnter,\n    },\n  ];\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getSegments());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getSegments();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, (processNextHandler) => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified path.\n   *\n   * @param path The path to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(path, direction = 'forward', animation) {\n    var _a;\n    if (path.startsWith('.')) {\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\n      const url = new URL(path, `https://host/${currentPath}`);\n      path = url.pathname + url.search;\n    }\n    let parsedPath = parsePath(path);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /** Go back to previous page in the window.history. */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = findChainForIDs(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\n      return false;\n    }\n    const segments = chainToSegments(chain);\n    if (!segments) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setSegments(segments, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\n    return true;\n  }\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\n  onRedirectChanged() {\n    const segments = this.getSegments();\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\n    }\n  }\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(segments, direction, animation) {\n    if (!segments) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(segments, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments: toSegments, queryString } = redirect.to;\n      this.setSegments(toSegments, direction, queryString);\n      redirectFrom = redirect.from;\n      segments = toSegments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = findChainForSegments(segments, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise((r) => (resolve = r));\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  /**\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n   *\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n   * Otherwise the beforeEnterHook hook of the target route is executed.\n   */\n  async runGuards(to = this.getSegments(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = findChainForSegments(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = findChainForSegments(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setSegments(segments, direction, queryString) {\n    this.state++;\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\n  }\n  getSegments() {\n    return readSegments(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(toSegments, redirectFromSegments) {\n    const from = this.previousPath;\n    const to = generatePath(toSegments);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target,\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true,\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter((c) => c != null)\n      .map((c) => c.trim())\n      .filter((c) => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach((c) => (map[c] = true));\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"names":["r","registerInstance","e","createEvent","i","getElement","h","H","Host","c","componentOnReady","q","debounce","b","getIonMode","o","openURL","createColorClasses","Route","constructor","hostRef","ionRouteDataChanged","url","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","watchers","RouteRedirect","ionRouteRedirectChanged","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","_ref","_asyncToGenerator","index","changed","animation","outlet","searchNavNode","Promise","resolve","result","setRouteId","element","markVisible","error","_x","_x2","_x3","_x4","apply","arguments","readNavState","_ref2","node","getRouteId","_x5","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","beforeEnter","beforeLeave","a","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","_this","canProceed","runGuards","getSegments","setSegments","writeNavStateRoot","onRoutesChanged","componentDidLoad","onRedirectChanged","bind","onPopState","_this2","historyDirection","onBackButton","ev","detail","register","processNextHandler","back","canTransition","_this3","_this4","startsWith","currentPath","URL","search","parsedPath","waitPromise","printDebug","_this5","navChanged","_this6","warn","safeWriteNavState","win","title","location","href","_this7","redirectFrom","toSegments","_this8","unlock","lock","_this9","p","_this10","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","_this11","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","render","mode","attrs","rel","target","class","color","style","ion_route","ion_route_redirect","ion_router","ion_router_link","hostContext","selector","closest","cssClassMap","getClassList","classes","array","isArray","getClassMap","SCHEME","test","router","preventDefault","g"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}